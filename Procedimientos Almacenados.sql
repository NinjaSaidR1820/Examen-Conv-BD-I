use ConvICine

create procedure SP_PROGRAMAR_PELICULA
(
 @IDPELICULA int,
 @DURACION int,
 @IDSALA int,
 @HORAINICIO time,
 @HORAFIN time
)
as
declare @ULTIMODIA int,
  @UDIA date,
  @DIAPROGRAMA date,
  @CONTADOR int=1
begin
 
 set @ULTIMODIA=(SELECT 7-( DATEDIFF(day,0,GETDATE())%7+1));
 set @UDIA=(SELECT DATEADD(day,@ULTIMODIA,GETDATE()))
 set @DIAPROGRAMA=GETDATE();

 while (@CONTADOR<=@DURACION)
 begin  
   while (@DIAPROGRAMA<=@UDIA)
  begin  
   INSERT INTO CARTELERA VALUES (@IDPELICULA,@IDSALA,@HORAINICIO,@HORAFIN,@DIAPROGRAMA,1);
   set @DIAPROGRAMA=(SELECT DATEADD(day,1,@DIAPROGRAMA));
     end
  set @UDIA=(SELECT DATEADD(day,7,@UDIA));
    set @CONTADOR=@CONTADOR+1; 
 end  

end
go



create procedure [dbo].[SP_VENTA]
(
 @IDCLIENTE INT,
 @IDCARTELERA INT,
 @IDEMPLEADO INT,
 @TPAGO VARCHAR(50),
 @XMLDOC TEXT
)
 
AS
DECLARE @DOC INT,
  @IDVENTA INT,
  @IDRASIENTO INT,
  @DESCT DECIMAL(19,2)
BEGIN
 
 BEGIN TRY
    BEGIN TRANSACTION 
  
  EXEC sp_xml_preparedocument @DOC OUTPUT, @XMLDOC;

   DECLARE @promoTEMP TABLE
   (
    id int identity(1,1),
    descuento decimal(10,2) DEFAULT 0,
    baseticket bit DEFAULT 0
   );
    
    IF (SELECT COUNT(IDPPROMOCION) from PROGRPROMOCION where CONVERT(VARCHAR,FECHA,111)=CONVERT(VARCHAR,GETDATE(),111))>0
     INSERT INTO @promoTEMP SELECT p.DESCUENTO,p.BASETICKET 
     from PROGRPROMOCION pg inner join PROMOCION p 
     on p.IDPROMOCION=pg.IDPROMOCION WHERE pg.FECHA=CONVERT(VARCHAR,GETDATE(),111);
     
    SET @DESCT =(SELECT  descuento from @promoTEMP);
    INSERT INTO VENTA 
    SELECT @IDCLIENTE,@IDCARTELERA,@IDEMPLEADO,GETDATE(),ASIENTOS,@TPAGO,PROMOCION,@DESCT,1 FROM OPENXML(@DOC,N'/ROOT/VENTA') 
    WITH (ASIENTOS VARCHAR(20),TPAGO VARCHAR(50),PROMOCION VARCHAR(80)) 
    SELECT @IDVENTA=@@IDENTITY;

    IF @@ERROR<>0
     ROLLBACK
    ELSE

     INSERT INTO DETALLEVENTA 
     SELECT @IDVENTA,DESCRIPCION,CANTIDAD,PRECIO FROM OPENXML(@DOC,N'/ROOT/VENTA/ITEM')
     WITH (DESCRIPCION VARCHAR(100),CANTIDAD INT,PRECIO DECIMAL(10,2));

     IF @@ERROR<>0
     ROLLBACK
      ELSE
      
       INSERT INTO REGISTROASIENTO 
       SELECT @IDVENTA,@IDCARTELERA,NROASIENTO FROM OPENXML(@DOC,N'/ROOT/ASIENTO')
       WITH ( NROASIENTO INT);

    COMMIT
 END TRY
 BEGIN CATCH

  IF @@TRANCOUNT > 0
   ROLLBACK
 END CATCH

END


--Programar una promocion

create procedure SP_PROGRAMAR_PROMO
(
@DURACION INT,
@NOMPROMOCION VARCHAR(80),
@IDPROMOCION INT
)
AS
DECLARE @ULTIMODIA INT,
@UDIA DATE,
@DIAPROGRAMA DATE,
@CONTADOR INT=1
begin

set @ULTIMODIA=(SELECT 7-( DATEDIFF(day,0,GETDATE())%7+1));

set @UDIA=(SELECT DATEADD(day,@ULTIMODIA,GETDATE()))

set @DIAPROGRAMA=GETDATE();


while (@CONTADOR<=@DURACION)

begin

while (@DIAPROGRAMA<=@UDIA)

begin

INSERT INTO PROGRPROMOCION VALUES (GETDATE(),@NOMPROMOCION,@IDPROMOCION,1);

set @DIAPROGRAMA=(SELECT DATEADD(day,1,@DIAPROGRAMA));

end

set @UDIA=(SELECT DATEADD(day,7,@UDIA));

set @CONTADOR=@CONTADOR+1;

end
end



--Programar fecha inicio y fin de una pelicula en fechas distintas 
--(Fecha inicio -> Entreno & Fecha Final ->Ultimo dia para ver la pelicula)--
create procedure SP_PROGRAMACION_XFECHA
(@FECHAINI DATE,@FECHAFIN DATE)
as

begin

select c.IDCARTELERA,p.TITULO,s.DESCRIPCION,c.HORAINICIO,c.HORAFIN,
c.FECHA,e.DESCRIPCION as 'estado' from CARTELERA c inner join PELICULA p on p.IDPELICULA=c.IDPELICULA
inner join sala s on s.IDSALA=c.IDSALA inner join ESTADO e on e.IDESTADO=c.IDESTADO
where c.FECHA Between @FECHAINI and @FECHAFIN;
end;


--Reportes 
create procedure SP_REPORTE_MES
as

begin

select COUNT (*) as contador,
year(fecha) as año,
month(fecha) as mes
from VENTA
group by year(fecha), month(fecha)
order by year(fecha), month(fecha) asc;
end;


--Reporte de ventas

create procedure SP_REPORTE_VCLIENTE

(@CODCLIENTE int)

as

begin

select V.IDVENTA,V.FECHA,C.NOMBRE+' '+C.APELLIDO as CLIENTE,R.HORAINICIO,R.HORAFIN,P.TITULO as PELICULA,D.NOMBRE+' '+D.APELLIDO as 'empleado',v.FECHA,v.ASIENTOS,v.TPAGO,
v.PROMOCION,v.DESCUENTO,E.DESCRIPCION from VENTA V

INNER JOIN CARTELERA R
on R.IDCARTELERA = V.IDCARTELERA
INNER JOIN ESTADO E
on E.IDESTADO=R.IDESTADO
INNER JOIN CLIENTE C
on C.IDCLIENTE=V.IDCLIENTE
INNER JOIN PELICULA P on
P.IDPELICULA = R.IDPELICULA
INNER JOIN EMPLEADO D on
D.IDEMPLEADO=V.IDEMPLEADO
where V.IDCLIENTE=@CODCLIENTE;
end;

--Reporte de cartelera
create procedure SP_REPORTE_CARTELERA

(@DURACION INT)
as
declare @SEMANAS INT=@DURACION*7;
declare @SPELICULA DATE=GETDATE()+@SEMANAS;
begin

select F.IDCARTELERA,F.FECHA,F.HORAINICIO,F.HORAFIN,P.TITULO,S.DESCRIPCION

from CARTELERA F

INNER JOIN PELICULA P on

P.IDPELICULA=F.IDPELICULA

INNER JOIN SALA S on

S.IDSALA=F.IDSALA

where F.FECHA BETWEEN GETDATE() AND @SPELICULA;

end;

